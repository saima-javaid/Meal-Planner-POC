{"ast":null,"code":"var _jsxFileName = \"/Users/saima.javaid/Documents/Saima/KiroProject/src/components/MealScheduler.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Clock, Bell, Plus, Edit3, Trash2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TIME_SLOTS = [{\n  id: 'breakfast',\n  label: 'Breakfast',\n  defaultTime: '08:00',\n  icon: '🌅'\n}, {\n  id: 'lunch',\n  label: 'Lunch',\n  defaultTime: '12:30',\n  icon: '☀️'\n}, {\n  id: 'dinner',\n  label: 'Dinner',\n  defaultTime: '18:30',\n  icon: '🌙'\n}, {\n  id: 'snacks',\n  label: 'Snacks',\n  defaultTime: '15:00',\n  icon: '🍎'\n}];\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nfunction MealScheduler({\n  mealPlan,\n  setMealPlan\n}) {\n  _s();\n  const [mealSchedules, setMealSchedules] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [selectedDay, setSelectedDay] = useState(new Date().toLocaleDateString('en-US', {\n    weekday: 'long'\n  }));\n\n  // Load saved schedules\n  useEffect(() => {\n    const saved = localStorage.getItem('mealSchedules');\n    if (saved) {\n      try {\n        setMealSchedules(JSON.parse(saved));\n      } catch (error) {\n        console.error('Error loading meal schedules:', error);\n      }\n    }\n  }, []);\n\n  // Save schedules\n  useEffect(() => {\n    localStorage.setItem('mealSchedules', JSON.stringify(mealSchedules));\n  }, [mealSchedules]);\n  const updateMealTime = (day, mealType, time) => {\n    const key = `${day}-${mealType}`;\n    setMealSchedules(prev => ({\n      ...prev,\n      [key]: {\n        ...prev[key],\n        time,\n        day,\n        mealType\n      }\n    }));\n  };\n  const toggleNotification = (day, mealType) => {\n    const key = `${day}-${mealType}`;\n    setNotifications(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n\n    // In a real app, this would set up actual notifications\n    if (!notifications[key]) {\n      console.log(`Notification set for ${mealType} on ${day}`);\n    }\n  };\n  const getMealTime = (day, mealType) => {\n    const key = `${day}-${mealType}`;\n    const schedule = mealSchedules[key];\n    if (schedule !== null && schedule !== void 0 && schedule.time) return schedule.time;\n    const timeSlot = TIME_SLOTS.find(slot => slot.id.toLowerCase() === mealType.toLowerCase());\n    return (timeSlot === null || timeSlot === void 0 ? void 0 : timeSlot.defaultTime) || '12:00';\n  };\n  const getUpcomingMeals = () => {\n    const now = new Date();\n    const today = now.toLocaleDateString('en-US', {\n      weekday: 'long'\n    });\n    const currentTime = now.toTimeString().slice(0, 5);\n    const upcoming = [];\n    DAYS.forEach(day => {\n      TIME_SLOTS.forEach(slot => {\n        const key = `${day}-${slot.label}`;\n        const meals = mealPlan[key];\n        if (meals && meals.length > 0) {\n          const mealTime = getMealTime(day, slot.label);\n          const isToday = day === today;\n          const isPast = isToday && mealTime < currentTime;\n          if (!isPast) {\n            upcoming.push({\n              day,\n              mealType: slot.label,\n              time: mealTime,\n              meals,\n              icon: slot.icon,\n              isToday,\n              key\n            });\n          }\n        }\n      });\n    });\n    return upcoming.sort((a, b) => {\n      if (a.isToday && !b.isToday) return -1;\n      if (!a.isToday && b.isToday) return 1;\n      if (a.day !== b.day) {\n        return DAYS.indexOf(a.day) - DAYS.indexOf(b.day);\n      }\n      return a.time.localeCompare(b.time);\n    }).slice(0, 6);\n  };\n  const generateWeeklySchedule = () => {\n    const schedule = {};\n    DAYS.forEach(day => {\n      TIME_SLOTS.forEach(slot => {\n        const key = `${day}-${slot.label}`;\n        if (mealPlan[key] && mealPlan[key].length > 0) {\n          schedule[key] = {\n            day,\n            mealType: slot.label,\n            time: getMealTime(day, slot.label),\n            meals: mealPlan[key],\n            icon: slot.icon\n          };\n        }\n      });\n    });\n    return schedule;\n  };\n  const exportToCalendar = () => {\n    const schedule = generateWeeklySchedule();\n    let icsContent = 'BEGIN:VCALENDAR\\nVERSION:2.0\\nPRODID:-//Meal Planner//EN\\n';\n    Object.values(schedule).forEach(meal => {\n      const startDate = new Date();\n      // Find the next occurrence of this day\n      const dayIndex = DAYS.indexOf(meal.day);\n      const today = startDate.getDay() === 0 ? 6 : startDate.getDay() - 1; // Convert Sunday=0 to Monday=0\n      const daysUntil = (dayIndex - today + 7) % 7;\n      startDate.setDate(startDate.getDate() + daysUntil);\n      const [hours, minutes] = meal.time.split(':');\n      startDate.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n      const endDate = new Date(startDate);\n      endDate.setHours(endDate.getHours() + 1);\n      const formatDate = date => {\n        return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';\n      };\n      icsContent += `BEGIN:VEVENT\\n`;\n      icsContent += `DTSTART:${formatDate(startDate)}\\n`;\n      icsContent += `DTEND:${formatDate(endDate)}\\n`;\n      icsContent += `SUMMARY:${meal.mealType} - ${meal.meals.map(m => m.name).join(', ')}\\n`;\n      icsContent += `DESCRIPTION:Meal prep for ${meal.meals.length} recipe(s)\\n`;\n      icsContent += `END:VEVENT\\n`;\n    });\n    icsContent += 'END:VCALENDAR';\n    const blob = new Blob([icsContent], {\n      type: 'text/calendar'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'meal-schedule.ics';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meal-scheduler-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), \"Meal Scheduler\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scheduler-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: exportToCalendar,\n            className: \"btn btn-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(Calendar, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), \"Export to Calendar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upcoming-meals\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), \"Upcoming Meals\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"upcoming-list\",\n          children: getUpcomingMeals().map(meal => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `upcoming-meal ${meal.isToday ? 'today' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-time\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"meal-icon\",\n                children: meal.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time\",\n                  children: meal.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"day\",\n                  children: meal.isToday ? 'Today' : meal.day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: meal.mealType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: meal.meals.map(m => m.name).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleNotification(meal.day, meal.mealType),\n              className: `notification-btn ${notifications[meal.key] ? 'active' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(Bell, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, meal.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-scheduler\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-selector\",\n          children: DAYS.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedDay(day),\n            className: `day-btn ${selectedDay === day ? 'active' : ''}`,\n            children: day.slice(0, 3)\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-schedule\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [selectedDay, \" Schedule\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-slots\",\n            children: TIME_SLOTS.map(slot => {\n              const key = `${selectedDay}-${slot.label}`;\n              const meals = mealPlan[key] || [];\n              const mealTime = getMealTime(selectedDay, slot.label);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-slot\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slot-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"slot-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"slot-icon\",\n                      children: slot.icon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: slot.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"time-controls\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"time\",\n                      value: mealTime,\n                      onChange: e => updateMealTime(selectedDay, slot.label, e.target.value),\n                      className: \"time-input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 243,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => toggleNotification(selectedDay, slot.label),\n                      className: `notification-btn ${notifications[key] ? 'active' : ''}`,\n                      children: /*#__PURE__*/_jsxDEV(Bell, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slot-meals\",\n                  children: meals.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"empty-slot\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"No meals planned\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 25\n                  }, this) : meals.map((meal, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"scheduled-meal\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"meal-info\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        children: meal.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"meal-meta\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [meal.prepTime, \" prep\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 269,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [meal.servings, \" servings\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 270,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          children: [meal.nutrition.calories, \" cal\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 29\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 21\n                }, this)]\n              }, slot.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n}\n_s(MealScheduler, \"z1nisvHAqn+sf+5AQypiFe1tyck=\");\n_c = MealScheduler;\nexport default MealScheduler;\nvar _c;\n$RefreshReg$(_c, \"MealScheduler\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Clock","Bell","Plus","Edit3","Trash2","jsxDEV","_jsxDEV","TIME_SLOTS","id","label","defaultTime","icon","DAYS","MealScheduler","mealPlan","setMealPlan","_s","mealSchedules","setMealSchedules","notifications","setNotifications","selectedDay","setSelectedDay","Date","toLocaleDateString","weekday","saved","localStorage","getItem","JSON","parse","error","console","setItem","stringify","updateMealTime","day","mealType","time","key","prev","toggleNotification","log","getMealTime","schedule","timeSlot","find","slot","toLowerCase","getUpcomingMeals","now","today","currentTime","toTimeString","slice","upcoming","forEach","meals","length","mealTime","isToday","isPast","push","sort","a","b","indexOf","localeCompare","generateWeeklySchedule","exportToCalendar","icsContent","Object","values","meal","startDate","dayIndex","getDay","daysUntil","setDate","getDate","hours","minutes","split","setHours","parseInt","endDate","getHours","formatDate","date","toISOString","replace","map","m","name","join","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","index","prepTime","servings","nutrition","calories","_c","$RefreshReg$"],"sources":["/Users/saima.javaid/Documents/Saima/KiroProject/src/components/MealScheduler.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, Clock, Bell, Plus, Edit3, Trash2 } from 'lucide-react';\n\nconst TIME_SLOTS = [\n  { id: 'breakfast', label: 'Breakfast', defaultTime: '08:00', icon: '🌅' },\n  { id: 'lunch', label: 'Lunch', defaultTime: '12:30', icon: '☀️' },\n  { id: 'dinner', label: 'Dinner', defaultTime: '18:30', icon: '🌙' },\n  { id: 'snacks', label: 'Snacks', defaultTime: '15:00', icon: '🍎' }\n];\n\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\nfunction MealScheduler({ mealPlan, setMealPlan }) {\n  const [mealSchedules, setMealSchedules] = useState({});\n  const [notifications, setNotifications] = useState({});\n  const [selectedDay, setSelectedDay] = useState(new Date().toLocaleDateString('en-US', { weekday: 'long' }));\n\n  // Load saved schedules\n  useEffect(() => {\n    const saved = localStorage.getItem('mealSchedules');\n    if (saved) {\n      try {\n        setMealSchedules(JSON.parse(saved));\n      } catch (error) {\n        console.error('Error loading meal schedules:', error);\n      }\n    }\n  }, []);\n\n  // Save schedules\n  useEffect(() => {\n    localStorage.setItem('mealSchedules', JSON.stringify(mealSchedules));\n  }, [mealSchedules]);\n\n  const updateMealTime = (day, mealType, time) => {\n    const key = `${day}-${mealType}`;\n    setMealSchedules(prev => ({\n      ...prev,\n      [key]: { ...prev[key], time, day, mealType }\n    }));\n  };\n\n  const toggleNotification = (day, mealType) => {\n    const key = `${day}-${mealType}`;\n    setNotifications(prev => ({\n      ...prev,\n      [key]: !prev[key]\n    }));\n    \n    // In a real app, this would set up actual notifications\n    if (!notifications[key]) {\n      console.log(`Notification set for ${mealType} on ${day}`);\n    }\n  };\n\n  const getMealTime = (day, mealType) => {\n    const key = `${day}-${mealType}`;\n    const schedule = mealSchedules[key];\n    if (schedule?.time) return schedule.time;\n    \n    const timeSlot = TIME_SLOTS.find(slot => slot.id.toLowerCase() === mealType.toLowerCase());\n    return timeSlot?.defaultTime || '12:00';\n  };\n\n  const getUpcomingMeals = () => {\n    const now = new Date();\n    const today = now.toLocaleDateString('en-US', { weekday: 'long' });\n    const currentTime = now.toTimeString().slice(0, 5);\n    \n    const upcoming = [];\n    \n    DAYS.forEach(day => {\n      TIME_SLOTS.forEach(slot => {\n        const key = `${day}-${slot.label}`;\n        const meals = mealPlan[key];\n        if (meals && meals.length > 0) {\n          const mealTime = getMealTime(day, slot.label);\n          const isToday = day === today;\n          const isPast = isToday && mealTime < currentTime;\n          \n          if (!isPast) {\n            upcoming.push({\n              day,\n              mealType: slot.label,\n              time: mealTime,\n              meals,\n              icon: slot.icon,\n              isToday,\n              key\n            });\n          }\n        }\n      });\n    });\n    \n    return upcoming.sort((a, b) => {\n      if (a.isToday && !b.isToday) return -1;\n      if (!a.isToday && b.isToday) return 1;\n      if (a.day !== b.day) {\n        return DAYS.indexOf(a.day) - DAYS.indexOf(b.day);\n      }\n      return a.time.localeCompare(b.time);\n    }).slice(0, 6);\n  };\n\n  const generateWeeklySchedule = () => {\n    const schedule = {};\n    \n    DAYS.forEach(day => {\n      TIME_SLOTS.forEach(slot => {\n        const key = `${day}-${slot.label}`;\n        if (mealPlan[key] && mealPlan[key].length > 0) {\n          schedule[key] = {\n            day,\n            mealType: slot.label,\n            time: getMealTime(day, slot.label),\n            meals: mealPlan[key],\n            icon: slot.icon\n          };\n        }\n      });\n    });\n    \n    return schedule;\n  };\n\n  const exportToCalendar = () => {\n    const schedule = generateWeeklySchedule();\n    let icsContent = 'BEGIN:VCALENDAR\\nVERSION:2.0\\nPRODID:-//Meal Planner//EN\\n';\n    \n    Object.values(schedule).forEach(meal => {\n      const startDate = new Date();\n      // Find the next occurrence of this day\n      const dayIndex = DAYS.indexOf(meal.day);\n      const today = startDate.getDay() === 0 ? 6 : startDate.getDay() - 1; // Convert Sunday=0 to Monday=0\n      const daysUntil = (dayIndex - today + 7) % 7;\n      startDate.setDate(startDate.getDate() + daysUntil);\n      \n      const [hours, minutes] = meal.time.split(':');\n      startDate.setHours(parseInt(hours), parseInt(minutes), 0, 0);\n      \n      const endDate = new Date(startDate);\n      endDate.setHours(endDate.getHours() + 1);\n      \n      const formatDate = (date) => {\n        return date.toISOString().replace(/[-:]/g, '').split('.')[0] + 'Z';\n      };\n      \n      icsContent += `BEGIN:VEVENT\\n`;\n      icsContent += `DTSTART:${formatDate(startDate)}\\n`;\n      icsContent += `DTEND:${formatDate(endDate)}\\n`;\n      icsContent += `SUMMARY:${meal.mealType} - ${meal.meals.map(m => m.name).join(', ')}\\n`;\n      icsContent += `DESCRIPTION:Meal prep for ${meal.meals.length} recipe(s)\\n`;\n      icsContent += `END:VEVENT\\n`;\n    });\n    \n    icsContent += 'END:VCALENDAR';\n    \n    const blob = new Blob([icsContent], { type: 'text/calendar' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'meal-schedule.ics';\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"meal-scheduler-header\">\n          <h2>\n            <Calendar size={24} />\n            Meal Scheduler\n          </h2>\n          <div className=\"scheduler-actions\">\n            <button onClick={exportToCalendar} className=\"btn btn-secondary\">\n              <Calendar size={16} />\n              Export to Calendar\n            </button>\n          </div>\n        </div>\n\n        <div className=\"upcoming-meals\">\n          <h3>\n            <Clock size={20} />\n            Upcoming Meals\n          </h3>\n          <div className=\"upcoming-list\">\n            {getUpcomingMeals().map(meal => (\n              <div key={meal.key} className={`upcoming-meal ${meal.isToday ? 'today' : ''}`}>\n                <div className=\"meal-time\">\n                  <span className=\"meal-icon\">{meal.icon}</span>\n                  <div className=\"time-info\">\n                    <span className=\"time\">{meal.time}</span>\n                    <span className=\"day\">{meal.isToday ? 'Today' : meal.day}</span>\n                  </div>\n                </div>\n                <div className=\"meal-details\">\n                  <h4>{meal.mealType}</h4>\n                  <p>{meal.meals.map(m => m.name).join(', ')}</p>\n                </div>\n                <button\n                  onClick={() => toggleNotification(meal.day, meal.mealType)}\n                  className={`notification-btn ${notifications[meal.key] ? 'active' : ''}`}\n                >\n                  <Bell size={16} />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"day-scheduler\">\n          <div className=\"day-selector\">\n            {DAYS.map(day => (\n              <button\n                key={day}\n                onClick={() => setSelectedDay(day)}\n                className={`day-btn ${selectedDay === day ? 'active' : ''}`}\n              >\n                {day.slice(0, 3)}\n              </button>\n            ))}\n          </div>\n\n          <div className=\"day-schedule\">\n            <h3>{selectedDay} Schedule</h3>\n            <div className=\"time-slots\">\n              {TIME_SLOTS.map(slot => {\n                const key = `${selectedDay}-${slot.label}`;\n                const meals = mealPlan[key] || [];\n                const mealTime = getMealTime(selectedDay, slot.label);\n                \n                return (\n                  <div key={slot.id} className=\"time-slot\">\n                    <div className=\"slot-header\">\n                      <div className=\"slot-info\">\n                        <span className=\"slot-icon\">{slot.icon}</span>\n                        <h4>{slot.label}</h4>\n                      </div>\n                      <div className=\"time-controls\">\n                        <input\n                          type=\"time\"\n                          value={mealTime}\n                          onChange={(e) => updateMealTime(selectedDay, slot.label, e.target.value)}\n                          className=\"time-input\"\n                        />\n                        <button\n                          onClick={() => toggleNotification(selectedDay, slot.label)}\n                          className={`notification-btn ${notifications[key] ? 'active' : ''}`}\n                        >\n                          <Bell size={14} />\n                        </button>\n                      </div>\n                    </div>\n                    \n                    <div className=\"slot-meals\">\n                      {meals.length === 0 ? (\n                        <div className=\"empty-slot\">\n                          <p>No meals planned</p>\n                        </div>\n                      ) : (\n                        meals.map((meal, index) => (\n                          <div key={index} className=\"scheduled-meal\">\n                            <div className=\"meal-info\">\n                              <h5>{meal.name}</h5>\n                              <div className=\"meal-meta\">\n                                <span>{meal.prepTime} prep</span>\n                                <span>{meal.servings} servings</span>\n                                <span>{meal.nutrition.calories} cal</span>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MealScheduler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}