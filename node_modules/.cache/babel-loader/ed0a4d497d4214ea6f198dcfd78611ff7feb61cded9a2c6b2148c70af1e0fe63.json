{"ast":null,"code":"var _jsxFileName = \"/Users/saima.javaid/Documents/Saima/KiroProject/src/components/MealPrepScheduler.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, Clock, Package, CheckCircle, AlertCircle, ArrowLeft, Save } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PREP_DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nfunction MealPrepScheduler({\n  mealPlan\n}) {\n  _s();\n  const navigate = useNavigate();\n  const [prepSchedule, setPrepSchedule] = useState({});\n  const [selectedPrepDay, setSelectedPrepDay] = useState('Sunday');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  // Load saved schedule from localStorage on component mount\n  useEffect(() => {\n    const savedSchedule = localStorage.getItem('mealPrepSchedule');\n    if (savedSchedule) {\n      try {\n        setPrepSchedule(JSON.parse(savedSchedule));\n      } catch (error) {\n        console.error('Error loading saved schedule:', error);\n      }\n    }\n  }, []);\n\n  // Save schedule to localStorage whenever it changes\n  useEffect(() => {\n    if (Object.keys(prepSchedule).length > 0) {\n      localStorage.setItem('mealPrepSchedule', JSON.stringify(prepSchedule));\n    }\n  }, [prepSchedule]);\n  const getMealPrepTasks = () => {\n    const tasks = [];\n    Object.entries(mealPlan).forEach(([key, meals]) => {\n      const [day, mealType] = key.split('-');\n      meals.forEach(meal => {\n        if (meal.mealPrepFriendly) {\n          tasks.push({\n            id: `${key}-${meal.name}`,\n            meal: meal.name,\n            day,\n            mealType,\n            prepTime: meal.prepTime,\n            cookTime: meal.cookTime,\n            servings: meal.servings,\n            storageInstructions: meal.storageInstructions,\n            ingredients: meal.ingredients,\n            difficulty: meal.difficulty\n          });\n        }\n      });\n    });\n    return tasks;\n  };\n  const assignTaskToPrepDay = (taskId, prepDay) => {\n    setPrepSchedule(prev => ({\n      ...prev,\n      [taskId]: {\n        prepDay,\n        completed: false\n      }\n    }));\n  };\n  const toggleTaskCompletion = taskId => {\n    setPrepSchedule(prev => {\n      var _prev$taskId;\n      return {\n        ...prev,\n        [taskId]: {\n          ...prev[taskId],\n          completed: !((_prev$taskId = prev[taskId]) !== null && _prev$taskId !== void 0 && _prev$taskId.completed)\n        }\n      };\n    });\n  };\n  const getTasksForDay = prepDay => {\n    const allTasks = getMealPrepTasks();\n    return allTasks.filter(task => {\n      var _prepSchedule$task$id;\n      return ((_prepSchedule$task$id = prepSchedule[task.id]) === null || _prepSchedule$task$id === void 0 ? void 0 : _prepSchedule$task$id.prepDay) === prepDay;\n    });\n  };\n  const getUnscheduledTasks = () => {\n    const allTasks = getMealPrepTasks();\n    return allTasks.filter(task => {\n      var _prepSchedule$task$id2;\n      return !((_prepSchedule$task$id2 = prepSchedule[task.id]) !== null && _prepSchedule$task$id2 !== void 0 && _prepSchedule$task$id2.prepDay);\n    });\n  };\n  const getTotalPrepTime = prepDay => {\n    const tasks = getTasksForDay(prepDay);\n    return tasks.reduce((total, task) => {\n      const prepMinutes = parseInt(task.prepTime) || 0;\n      const cookMinutes = parseInt(task.cookTime) || 0;\n      return total + prepMinutes + cookMinutes;\n    }, 0);\n  };\n  const allTasks = getMealPrepTasks();\n  if (allTasks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: [/*#__PURE__*/_jsxDEV(Package, {\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Meal Prep Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Add some meal prep friendly recipes to your meal plan to get started with scheduling.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prep-scheduler-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), \"Meal Prep Scheduler\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Organize your meal prep tasks throughout the week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prep-overview\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prep-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: allTasks.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Prep Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: getUnscheduledTasks().length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Unscheduled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: Object.values(prepSchedule).filter(s => s.completed).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), getUnscheduledTasks().length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"unscheduled-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), \"Unscheduled Tasks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: getUnscheduledTasks().map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card unscheduled\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.meal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-day\",\n                  children: [task.day, \" \", task.mealType]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-time\",\n                  children: [/*#__PURE__*/_jsxDEV(Clock, {\n                    size: 14\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 25\n                  }, this), task.prepTime, \" + \", task.cookTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"task-difficulty\",\n                  children: task.difficulty\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"storage-tip\",\n                children: task.storageInstructions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-actions\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                onChange: e => assignTaskToPrepDay(task.id, e.target.value),\n                className: \"prep-day-select\",\n                defaultValue: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Assign to day...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this), PREP_DAYS.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: day,\n                  children: day\n                }, day, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"prep-schedule\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-selector\",\n          children: PREP_DAYS.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedPrepDay(day),\n            className: `day-btn ${selectedPrepDay === day ? 'active' : ''}`,\n            children: [day, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"task-count\",\n              children: getTasksForDay(day).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-day-tasks\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [selectedPrepDay, \" Prep Schedule\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-summary\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"total-time\",\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this), getTotalPrepTime(selectedPrepDay), \" minutes total\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"task-count\",\n                children: [getTasksForDay(selectedPrepDay).length, \" tasks\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-list\",\n            children: [getTasksForDay(selectedPrepDay).map(task => {\n              var _prepSchedule$task$id3, _prepSchedule$task$id4, _prepSchedule$task$id5, _prepSchedule$task$id6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `task-card ${(_prepSchedule$task$id3 = prepSchedule[task.id]) !== null && _prepSchedule$task$id3 !== void 0 && _prepSchedule$task$id3.completed ? 'completed' : ''}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => toggleTaskCompletion(task.id),\n                    className: `checkbox ${(_prepSchedule$task$id4 = prepSchedule[task.id]) !== null && _prepSchedule$task$id4 !== void 0 && _prepSchedule$task$id4.completed ? 'checked' : ''}`,\n                    children: ((_prepSchedule$task$id5 = prepSchedule[task.id]) === null || _prepSchedule$task$id5 === void 0 ? void 0 : _prepSchedule$task$id5.completed) && /*#__PURE__*/_jsxDEV(CheckCircle, {\n                      size: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 60\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 218,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: task.meal\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-meta\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"task-day\",\n                      children: [\"For \", task.day, \" \", task.mealType]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"task-time\",\n                      children: [/*#__PURE__*/_jsxDEV(Clock, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 25\n                      }, this), \"Prep: \", task.prepTime, \", Cook: \", task.cookTime]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"servings\",\n                      children: [task.servings, \" servings\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"ingredients-preview\",\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Ingredients:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 237,\n                      columnNumber: 23\n                    }, this), \" \", task.ingredients.slice(0, 4).join(', '), task.ingredients.length > 4 && '...']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"storage-tip\",\n                    children: task.storageInstructions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-actions\",\n                  children: /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: ((_prepSchedule$task$id6 = prepSchedule[task.id]) === null || _prepSchedule$task$id6 === void 0 ? void 0 : _prepSchedule$task$id6.prepDay) || '',\n                    onChange: e => assignTaskToPrepDay(task.id, e.target.value),\n                    className: \"prep-day-select small\",\n                    children: PREP_DAYS.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: day,\n                      children: day\n                    }, day, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 25\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 19\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this);\n            }), getTasksForDay(selectedPrepDay).length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-day\",\n              children: [/*#__PURE__*/_jsxDEV(Package, {\n                size: 32\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"No prep tasks scheduled for \", selectedPrepDay]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(MealPrepScheduler, \"dc4G8uz3316BLhhWRAkqxN+UVJk=\", false, function () {\n  return [useNavigate];\n});\n_c = MealPrepScheduler;\nexport default MealPrepScheduler;\nvar _c;\n$RefreshReg$(_c, \"MealPrepScheduler\");","map":{"version":3,"names":["React","useState","useEffect","Calendar","Clock","Package","CheckCircle","AlertCircle","ArrowLeft","Save","useNavigate","jsxDEV","_jsxDEV","PREP_DAYS","MealPrepScheduler","mealPlan","_s","navigate","prepSchedule","setPrepSchedule","selectedPrepDay","setSelectedPrepDay","hasUnsavedChanges","setHasUnsavedChanges","savedSchedule","localStorage","getItem","JSON","parse","error","console","Object","keys","length","setItem","stringify","getMealPrepTasks","tasks","entries","forEach","key","meals","day","mealType","split","meal","mealPrepFriendly","push","id","name","prepTime","cookTime","servings","storageInstructions","ingredients","difficulty","assignTaskToPrepDay","taskId","prepDay","prev","completed","toggleTaskCompletion","_prev$taskId","getTasksForDay","allTasks","filter","task","_prepSchedule$task$id","getUnscheduledTasks","_prepSchedule$task$id2","getTotalPrepTime","reduce","total","prepMinutes","parseInt","cookMinutes","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","values","s","map","onChange","e","target","value","defaultValue","onClick","_prepSchedule$task$id3","_prepSchedule$task$id4","_prepSchedule$task$id5","_prepSchedule$task$id6","slice","join","_c","$RefreshReg$"],"sources":["/Users/saima.javaid/Documents/Saima/KiroProject/src/components/MealPrepScheduler.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Calendar, Clock, Package, CheckCircle, AlertCircle, ArrowLeft, Save } from 'lucide-react';\nimport { useNavigate } from 'react-router-dom';\n\nconst PREP_DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nfunction MealPrepScheduler({ mealPlan }) {\n  const navigate = useNavigate();\n  const [prepSchedule, setPrepSchedule] = useState({});\n  const [selectedPrepDay, setSelectedPrepDay] = useState('Sunday');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n\n  // Load saved schedule from localStorage on component mount\n  useEffect(() => {\n    const savedSchedule = localStorage.getItem('mealPrepSchedule');\n    if (savedSchedule) {\n      try {\n        setPrepSchedule(JSON.parse(savedSchedule));\n      } catch (error) {\n        console.error('Error loading saved schedule:', error);\n      }\n    }\n  }, []);\n\n  // Save schedule to localStorage whenever it changes\n  useEffect(() => {\n    if (Object.keys(prepSchedule).length > 0) {\n      localStorage.setItem('mealPrepSchedule', JSON.stringify(prepSchedule));\n    }\n  }, [prepSchedule]);\n\n  const getMealPrepTasks = () => {\n    const tasks = [];\n    \n    Object.entries(mealPlan).forEach(([key, meals]) => {\n      const [day, mealType] = key.split('-');\n      meals.forEach(meal => {\n        if (meal.mealPrepFriendly) {\n          tasks.push({\n            id: `${key}-${meal.name}`,\n            meal: meal.name,\n            day,\n            mealType,\n            prepTime: meal.prepTime,\n            cookTime: meal.cookTime,\n            servings: meal.servings,\n            storageInstructions: meal.storageInstructions,\n            ingredients: meal.ingredients,\n            difficulty: meal.difficulty\n          });\n        }\n      });\n    });\n    \n    return tasks;\n  };\n\n  const assignTaskToPrepDay = (taskId, prepDay) => {\n    setPrepSchedule(prev => ({\n      ...prev,\n      [taskId]: { prepDay, completed: false }\n    }));\n  };\n\n  const toggleTaskCompletion = (taskId) => {\n    setPrepSchedule(prev => ({\n      ...prev,\n      [taskId]: {\n        ...prev[taskId],\n        completed: !prev[taskId]?.completed\n      }\n    }));\n  };\n\n  const getTasksForDay = (prepDay) => {\n    const allTasks = getMealPrepTasks();\n    return allTasks.filter(task => \n      prepSchedule[task.id]?.prepDay === prepDay\n    );\n  };\n\n  const getUnscheduledTasks = () => {\n    const allTasks = getMealPrepTasks();\n    return allTasks.filter(task => \n      !prepSchedule[task.id]?.prepDay\n    );\n  };\n\n  const getTotalPrepTime = (prepDay) => {\n    const tasks = getTasksForDay(prepDay);\n    return tasks.reduce((total, task) => {\n      const prepMinutes = parseInt(task.prepTime) || 0;\n      const cookMinutes = parseInt(task.cookTime) || 0;\n      return total + prepMinutes + cookMinutes;\n    }, 0);\n  };\n\n  const allTasks = getMealPrepTasks();\n\n  if (allTasks.length === 0) {\n    return (\n      <div className=\"container\">\n        <div className=\"card\">\n          <div className=\"empty-state\">\n            <Package size={48} />\n            <h3>No Meal Prep Tasks</h3>\n            <p>Add some meal prep friendly recipes to your meal plan to get started with scheduling.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"prep-scheduler-header\">\n          <h2>\n            <Calendar size={24} />\n            Meal Prep Scheduler\n          </h2>\n          <p>Organize your meal prep tasks throughout the week</p>\n        </div>\n\n        <div className=\"prep-overview\">\n          <div className=\"prep-stats\">\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{allTasks.length}</span>\n              <span className=\"stat-label\">Prep Tasks</span>\n            </div>\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">{getUnscheduledTasks().length}</span>\n              <span className=\"stat-label\">Unscheduled</span>\n            </div>\n            <div className=\"stat-card\">\n              <span className=\"stat-number\">\n                {Object.values(prepSchedule).filter(s => s.completed).length}\n              </span>\n              <span className=\"stat-label\">Completed</span>\n            </div>\n          </div>\n        </div>\n\n        {getUnscheduledTasks().length > 0 && (\n          <div className=\"unscheduled-section\">\n            <h3>\n              <AlertCircle size={20} />\n              Unscheduled Tasks\n            </h3>\n            <div className=\"task-list\">\n              {getUnscheduledTasks().map(task => (\n                <div key={task.id} className=\"task-card unscheduled\">\n                  <div className=\"task-info\">\n                    <h4>{task.meal}</h4>\n                    <div className=\"task-meta\">\n                      <span className=\"task-day\">{task.day} {task.mealType}</span>\n                      <span className=\"task-time\">\n                        <Clock size={14} />\n                        {task.prepTime} + {task.cookTime}\n                      </span>\n                      <span className=\"task-difficulty\">{task.difficulty}</span>\n                    </div>\n                    <p className=\"storage-tip\">{task.storageInstructions}</p>\n                  </div>\n                  <div className=\"task-actions\">\n                    <select \n                      onChange={(e) => assignTaskToPrepDay(task.id, e.target.value)}\n                      className=\"prep-day-select\"\n                      defaultValue=\"\"\n                    >\n                      <option value=\"\">Assign to day...</option>\n                      {PREP_DAYS.map(day => (\n                        <option key={day} value={day}>{day}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        <div className=\"prep-schedule\">\n          <div className=\"day-selector\">\n            {PREP_DAYS.map(day => (\n              <button\n                key={day}\n                onClick={() => setSelectedPrepDay(day)}\n                className={`day-btn ${selectedPrepDay === day ? 'active' : ''}`}\n              >\n                {day}\n                <span className=\"task-count\">{getTasksForDay(day).length}</span>\n              </button>\n            ))}\n          </div>\n\n          <div className=\"selected-day-tasks\">\n            <div className=\"day-header\">\n              <h3>{selectedPrepDay} Prep Schedule</h3>\n              <div className=\"day-summary\">\n                <span className=\"total-time\">\n                  <Clock size={16} />\n                  {getTotalPrepTime(selectedPrepDay)} minutes total\n                </span>\n                <span className=\"task-count\">\n                  {getTasksForDay(selectedPrepDay).length} tasks\n                </span>\n              </div>\n            </div>\n\n            <div className=\"task-list\">\n              {getTasksForDay(selectedPrepDay).map(task => (\n                <div \n                  key={task.id} \n                  className={`task-card ${prepSchedule[task.id]?.completed ? 'completed' : ''}`}\n                >\n                  <div className=\"task-checkbox\">\n                    <button\n                      onClick={() => toggleTaskCompletion(task.id)}\n                      className={`checkbox ${prepSchedule[task.id]?.completed ? 'checked' : ''}`}\n                    >\n                      {prepSchedule[task.id]?.completed && <CheckCircle size={16} />}\n                    </button>\n                  </div>\n                  \n                  <div className=\"task-info\">\n                    <h4>{task.meal}</h4>\n                    <div className=\"task-meta\">\n                      <span className=\"task-day\">For {task.day} {task.mealType}</span>\n                      <span className=\"task-time\">\n                        <Clock size={14} />\n                        Prep: {task.prepTime}, Cook: {task.cookTime}\n                      </span>\n                      <span className=\"servings\">{task.servings} servings</span>\n                    </div>\n                    <div className=\"ingredients-preview\">\n                      <strong>Ingredients:</strong> {task.ingredients.slice(0, 4).join(', ')}\n                      {task.ingredients.length > 4 && '...'}\n                    </div>\n                    <p className=\"storage-tip\">{task.storageInstructions}</p>\n                  </div>\n\n                  <div className=\"task-actions\">\n                    <select \n                      value={prepSchedule[task.id]?.prepDay || ''}\n                      onChange={(e) => assignTaskToPrepDay(task.id, e.target.value)}\n                      className=\"prep-day-select small\"\n                    >\n                      {PREP_DAYS.map(day => (\n                        <option key={day} value={day}>{day}</option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n              ))}\n              \n              {getTasksForDay(selectedPrepDay).length === 0 && (\n                <div className=\"empty-day\">\n                  <Package size={32} />\n                  <p>No prep tasks scheduled for {selectedPrepDay}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MealPrepScheduler;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}