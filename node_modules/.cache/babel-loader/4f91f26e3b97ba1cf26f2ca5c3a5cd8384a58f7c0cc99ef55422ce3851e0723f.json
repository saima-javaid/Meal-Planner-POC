{"ast":null,"code":"var _jsxFileName = \"/Users/saima.javaid/Documents/Saima/KiroProject/src/components/QuickMealPlanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Zap, Calendar, Shuffle, Check, Plus, Clock, Users } from 'lucide-react';\nimport { ENHANCED_RECIPES, filterRecipesByPreferences, scoreRecipeByPreferences } from '../data/recipes';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner', 'Snacks'];\nconst QUICK_TEMPLATES = [{\n  id: 'balanced',\n  name: 'Balanced Week',\n  description: 'Mix of healthy proteins, vegetables, and grains',\n  icon: '⚖️'\n}, {\n  id: 'quick',\n  name: 'Quick & Easy',\n  description: 'Meals under 30 minutes prep time',\n  icon: '⚡'\n}, {\n  id: 'healthy',\n  name: 'Health Focus',\n  description: 'High protein, low carb, nutrient dense',\n  icon: '🥗'\n}, {\n  id: 'comfort',\n  name: 'Comfort Food',\n  description: 'Satisfying, hearty meals for the week',\n  icon: '🍲'\n}];\nfunction QuickMealPlanner({\n  mealPlan,\n  setMealPlan,\n  preferences,\n  groceries\n}) {\n  _s();\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedPlan, setGeneratedPlan] = useState(null);\n  const [selectedDays, setSelectedDays] = useState(DAYS);\n  const [selectedMealTypes, setSelectedMealTypes] = useState(MEAL_TYPES);\n  const generateSmartPlan = async template => {\n    setIsGenerating(true);\n    setSelectedTemplate(template);\n\n    // Simulate AI thinking time\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    const filteredRecipes = filterRecipesByPreferences(ENHANCED_RECIPES, preferences);\n    const availableIngredients = groceries.map(item => item.name.toLowerCase());\n\n    // Score recipes based on template preferences\n    const scoredRecipes = filteredRecipes.map(recipe => {\n      let templateScore = 0;\n      switch (template.id) {\n        case 'quick':\n          templateScore = parseInt(recipe.prepTime) <= 20 ? 2 : 0;\n          break;\n        case 'healthy':\n          templateScore = recipe.nutrition.protein > 20 ? 2 : 0;\n          templateScore += recipe.nutrition.fiber > 5 ? 1 : 0;\n          break;\n        case 'comfort':\n          templateScore = recipe.tags.includes('comfort-food') ? 2 : 0;\n          break;\n        default:\n          templateScore = 1;\n      }\n      const preferenceScore = scoreRecipeByPreferences(recipe, preferences);\n      const inventoryScore = recipe.ingredients.filter(ingredient => availableIngredients.some(available => available.includes(ingredient.toLowerCase()) || ingredient.toLowerCase().includes(available))).length * 0.1;\n      return {\n        ...recipe,\n        totalScore: templateScore + preferenceScore + inventoryScore + recipe.rating / 5\n      };\n    });\n\n    // Sort by score and variety\n    const sortedRecipes = scoredRecipes.sort((a, b) => b.totalScore - a.totalScore);\n\n    // Generate plan ensuring variety\n    const newPlan = {};\n    const usedRecipes = new Set();\n    selectedDays.forEach(day => {\n      selectedMealTypes.forEach(mealType => {\n        const key = `${day}-${mealType}`;\n        const availableForMealType = sortedRecipes.filter(recipe => recipe.type === mealType && !usedRecipes.has(recipe.name));\n        if (availableForMealType.length > 0) {\n          const selectedRecipe = availableForMealType[0];\n          newPlan[key] = [selectedRecipe];\n          usedRecipes.add(selectedRecipe.name);\n        }\n      });\n    });\n    setGeneratedPlan(newPlan);\n    setIsGenerating(false);\n  };\n  const applyGeneratedPlan = () => {\n    const mealsCount = Object.keys(generatedPlan).length;\n    setMealPlan(prev => ({\n      ...prev,\n      ...generatedPlan\n    }));\n    setShowSuccessMessage(`🎉 Successfully applied ${mealsCount} meals to your weekly plan!`);\n    setGeneratedPlan(null);\n    setSelectedTemplate(null);\n\n    // Clear success message after 4 seconds\n    setTimeout(() => {\n      setShowSuccessMessage('');\n    }, 4000);\n  };\n  const [addedMeals, setAddedMeals] = useState(new Set());\n  const [showSuccessMessage, setShowSuccessMessage] = useState('');\n  const addBulkMeals = (mealType, recipes) => {\n    var _recipes$;\n    const newPlan = {\n      ...mealPlan\n    };\n    let addedCount = 0;\n    selectedDays.forEach((day, index) => {\n      const key = `${day}-${mealType}`;\n      const recipe = recipes[index % recipes.length];\n      if (recipe) {\n        newPlan[key] = [...(newPlan[key] || []), recipe];\n        addedCount++;\n      }\n    });\n    setMealPlan(newPlan);\n\n    // Show success feedback\n    const recipeName = (_recipes$ = recipes[0]) === null || _recipes$ === void 0 ? void 0 : _recipes$.name;\n    setAddedMeals(prev => new Set([...prev, `${recipeName}-${mealType}`]));\n    setShowSuccessMessage(`✅ Added \"${recipeName}\" to ${addedCount} days for ${mealType}!`);\n\n    // Clear success message after 3 seconds\n    setTimeout(() => {\n      setShowSuccessMessage('');\n    }, 3000);\n  };\n  const getPopularRecipes = (mealType, count = 3) => {\n    return filterRecipesByPreferences(ENHANCED_RECIPES, preferences).filter(recipe => recipe.type === mealType).sort((a, b) => b.rating - a.rating).slice(0, count);\n  };\n  const toggleDay = day => {\n    setSelectedDays(prev => prev.includes(day) ? prev.filter(d => d !== day) : [...prev, day]);\n  };\n  const toggleMealType = mealType => {\n    setSelectedMealTypes(prev => prev.includes(mealType) ? prev.filter(m => m !== mealType) : [...prev, mealType]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"quick-planner-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(Zap, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), \"Quick Meal Planner\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Generate your entire week in seconds with AI-powered suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: showSuccessMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), !generatedPlan && !isGenerating && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"planning-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Choose Days to Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-toggles\",\n              children: DAYS.map(day => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleDay(day),\n                className: `toggle-btn ${selectedDays.includes(day) ? 'active' : ''}`,\n                children: day.slice(0, 3)\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Choose Meal Types\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meal-type-toggles\",\n              children: MEAL_TYPES.map(mealType => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => toggleMealType(mealType),\n                className: `toggle-btn ${selectedMealTypes.includes(mealType) ? 'active' : ''}`,\n                children: mealType\n              }, mealType, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"template-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Choose Your Style\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"template-grid\",\n            children: QUICK_TEMPLATES.map(template => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => generateSmartPlan(template),\n              className: \"template-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"template-icon\",\n                children: template.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: template.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: template.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)]\n            }, template.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quick-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quick Add Popular Meals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-meal-sections\",\n            children: MEAL_TYPES.map(mealType => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"quick-meal-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: mealType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"popular-recipes\",\n                children: getPopularRecipes(mealType).map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"popular-recipe\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"recipe-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      children: recipe.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"recipe-meta\",\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"rating\",\n                        children: [\"\\u2B50 \", recipe.rating.toFixed(1)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 256,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"time\",\n                        children: [/*#__PURE__*/_jsxDEV(Clock, {\n                          size: 12\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 258,\n                          columnNumber: 33\n                        }, this), recipe.prepTime]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => addBulkMeals(mealType, [recipe]),\n                    className: `btn-add-bulk ${addedMeals.has(`${recipe.name}-${mealType}`) ? 'added' : ''}`,\n                    title: `Add to all ${selectedDays.length} selected days`,\n                    disabled: addedMeals.has(`${recipe.name}-${mealType}`),\n                    children: addedMeals.has(`${recipe.name}-${mealType}`) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Check, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 33\n                      }, this), \"Added!\"]\n                    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(Plus, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 33\n                      }, this), \"Add to Week (\", selectedDays.length, \" days)\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 27\n                  }, this)]\n                }, recipe.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 21\n              }, this)]\n            }, mealType, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), isGenerating && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generating-state\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-animation\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Creating Your Perfect Meal Plan...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Analyzing your preferences, dietary needs, and available ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generation-steps\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step active\",\n            children: \"\\u2713 Filtering recipes by dietary preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step active\",\n            children: \"\\u2713 Checking ingredient availability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step active\",\n            children: [\"\\u23F3 Optimizing for \", selectedTemplate === null || selectedTemplate === void 0 ? void 0 : selectedTemplate.name.toLowerCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"step\",\n            children: \"\\u23F3 Ensuring variety and balance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), generatedPlan && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generated-plan\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(Shuffle, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), \"Your \", selectedTemplate === null || selectedTemplate === void 0 ? void 0 : selectedTemplate.name, \" Plan is Ready!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Generated \", Object.keys(generatedPlan).length, \" meals for \", selectedDays.length, \" days\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-preview\",\n          children: selectedDays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-preview\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: day\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-meals\",\n              children: selectedMealTypes.map(mealType => {\n                const key = `${day}-${mealType}`;\n                const meals = generatedPlan[key] || [];\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meal-preview\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"meal-type\",\n                    children: mealType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 27\n                  }, this), meals.length > 0 ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"meal-name\",\n                    children: meals[0].name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 29\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"no-meal\",\n                    children: \"-\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 29\n                  }, this)]\n                }, mealType, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)]\n          }, day, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: Object.values(generatedPlan).reduce((sum, meals) => sum + meals.reduce((mealSum, meal) => mealSum + meal.nutrition.calories, 0), 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Calories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: new Set(Object.values(generatedPlan).flat().flatMap(meal => meal.ingredients)).size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Unique Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-number\",\n              children: Math.round(Object.values(generatedPlan).flat().reduce((sum, meal) => sum + parseInt(meal.prepTime), 0) / Object.values(generatedPlan).flat().length)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Avg Prep Time (min)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plan-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyGeneratedPlan,\n            className: \"btn btn-primary\",\n            children: [/*#__PURE__*/_jsxDEV(Check, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), \"Apply This Plan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => generateSmartPlan(selectedTemplate),\n            className: \"btn btn-secondary\",\n            children: [/*#__PURE__*/_jsxDEV(Shuffle, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), \"Generate Different Plan\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setGeneratedPlan(null),\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(QuickMealPlanner, \"XwyJpS1dAaFHFU1N1EncDhNckt4=\");\n_c = QuickMealPlanner;\nexport default QuickMealPlanner;\nvar _c;\n$RefreshReg$(_c, \"QuickMealPlanner\");","map":{"version":3,"names":["React","useState","Zap","Calendar","Shuffle","Check","Plus","Clock","Users","ENHANCED_RECIPES","filterRecipesByPreferences","scoreRecipeByPreferences","jsxDEV","_jsxDEV","Fragment","_Fragment","DAYS","MEAL_TYPES","QUICK_TEMPLATES","id","name","description","icon","QuickMealPlanner","mealPlan","setMealPlan","preferences","groceries","_s","selectedTemplate","setSelectedTemplate","isGenerating","setIsGenerating","generatedPlan","setGeneratedPlan","selectedDays","setSelectedDays","selectedMealTypes","setSelectedMealTypes","generateSmartPlan","template","Promise","resolve","setTimeout","filteredRecipes","availableIngredients","map","item","toLowerCase","scoredRecipes","recipe","templateScore","parseInt","prepTime","nutrition","protein","fiber","tags","includes","preferenceScore","inventoryScore","ingredients","filter","ingredient","some","available","length","totalScore","rating","sortedRecipes","sort","a","b","newPlan","usedRecipes","Set","forEach","day","mealType","key","availableForMealType","type","has","selectedRecipe","add","applyGeneratedPlan","mealsCount","Object","keys","prev","setShowSuccessMessage","addedMeals","setAddedMeals","showSuccessMessage","addBulkMeals","recipes","_recipes$","addedCount","index","recipeName","getPopularRecipes","count","slice","toggleDay","d","toggleMealType","m","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toFixed","title","disabled","meals","values","reduce","sum","mealSum","meal","calories","flat","flatMap","Math","round","_c","$RefreshReg$"],"sources":["/Users/saima.javaid/Documents/Saima/KiroProject/src/components/QuickMealPlanner.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Zap, Calendar, Shuffle, Check, Plus, Clock, Users } from 'lucide-react';\nimport { ENHANCED_RECIPES, filterRecipesByPreferences, scoreRecipeByPreferences } from '../data/recipes';\n\nconst DAYS = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst MEAL_TYPES = ['Breakfast', 'Lunch', 'Dinner', 'Snacks'];\n\nconst QUICK_TEMPLATES = [\n  {\n    id: 'balanced',\n    name: 'Balanced Week',\n    description: 'Mix of healthy proteins, vegetables, and grains',\n    icon: '⚖️'\n  },\n  {\n    id: 'quick',\n    name: 'Quick & Easy',\n    description: 'Meals under 30 minutes prep time',\n    icon: '⚡'\n  },\n  {\n    id: 'healthy',\n    name: 'Health Focus',\n    description: 'High protein, low carb, nutrient dense',\n    icon: '🥗'\n  },\n  {\n    id: 'comfort',\n    name: 'Comfort Food',\n    description: 'Satisfying, hearty meals for the week',\n    icon: '🍲'\n  }\n];\n\nfunction QuickMealPlanner({ mealPlan, setMealPlan, preferences, groceries }) {\n  const [selectedTemplate, setSelectedTemplate] = useState(null);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatedPlan, setGeneratedPlan] = useState(null);\n  const [selectedDays, setSelectedDays] = useState(DAYS);\n  const [selectedMealTypes, setSelectedMealTypes] = useState(MEAL_TYPES);\n\n  const generateSmartPlan = async (template) => {\n    setIsGenerating(true);\n    setSelectedTemplate(template);\n    \n    // Simulate AI thinking time\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    \n    const filteredRecipes = filterRecipesByPreferences(ENHANCED_RECIPES, preferences);\n    const availableIngredients = groceries.map(item => item.name.toLowerCase());\n    \n    // Score recipes based on template preferences\n    const scoredRecipes = filteredRecipes.map(recipe => {\n      let templateScore = 0;\n      \n      switch (template.id) {\n        case 'quick':\n          templateScore = parseInt(recipe.prepTime) <= 20 ? 2 : 0;\n          break;\n        case 'healthy':\n          templateScore = recipe.nutrition.protein > 20 ? 2 : 0;\n          templateScore += recipe.nutrition.fiber > 5 ? 1 : 0;\n          break;\n        case 'comfort':\n          templateScore = recipe.tags.includes('comfort-food') ? 2 : 0;\n          break;\n        default:\n          templateScore = 1;\n      }\n      \n      const preferenceScore = scoreRecipeByPreferences(recipe, preferences);\n      const inventoryScore = recipe.ingredients.filter(ingredient =>\n        availableIngredients.some(available => \n          available.includes(ingredient.toLowerCase()) || \n          ingredient.toLowerCase().includes(available)\n        )\n      ).length * 0.1;\n      \n      return {\n        ...recipe,\n        totalScore: templateScore + preferenceScore + inventoryScore + (recipe.rating / 5)\n      };\n    });\n    \n    // Sort by score and variety\n    const sortedRecipes = scoredRecipes.sort((a, b) => b.totalScore - a.totalScore);\n    \n    // Generate plan ensuring variety\n    const newPlan = {};\n    const usedRecipes = new Set();\n    \n    selectedDays.forEach(day => {\n      selectedMealTypes.forEach(mealType => {\n        const key = `${day}-${mealType}`;\n        const availableForMealType = sortedRecipes.filter(recipe => \n          recipe.type === mealType && !usedRecipes.has(recipe.name)\n        );\n        \n        if (availableForMealType.length > 0) {\n          const selectedRecipe = availableForMealType[0];\n          newPlan[key] = [selectedRecipe];\n          usedRecipes.add(selectedRecipe.name);\n        }\n      });\n    });\n    \n    setGeneratedPlan(newPlan);\n    setIsGenerating(false);\n  };\n\n  const applyGeneratedPlan = () => {\n    const mealsCount = Object.keys(generatedPlan).length;\n    setMealPlan(prev => ({ ...prev, ...generatedPlan }));\n    setShowSuccessMessage(`🎉 Successfully applied ${mealsCount} meals to your weekly plan!`);\n    setGeneratedPlan(null);\n    setSelectedTemplate(null);\n    \n    // Clear success message after 4 seconds\n    setTimeout(() => {\n      setShowSuccessMessage('');\n    }, 4000);\n  };\n\n  const [addedMeals, setAddedMeals] = useState(new Set());\n  const [showSuccessMessage, setShowSuccessMessage] = useState('');\n\n  const addBulkMeals = (mealType, recipes) => {\n    const newPlan = { ...mealPlan };\n    let addedCount = 0;\n    \n    selectedDays.forEach((day, index) => {\n      const key = `${day}-${mealType}`;\n      const recipe = recipes[index % recipes.length];\n      if (recipe) {\n        newPlan[key] = [...(newPlan[key] || []), recipe];\n        addedCount++;\n      }\n    });\n    \n    setMealPlan(newPlan);\n    \n    // Show success feedback\n    const recipeName = recipes[0]?.name;\n    setAddedMeals(prev => new Set([...prev, `${recipeName}-${mealType}`]));\n    setShowSuccessMessage(`✅ Added \"${recipeName}\" to ${addedCount} days for ${mealType}!`);\n    \n    // Clear success message after 3 seconds\n    setTimeout(() => {\n      setShowSuccessMessage('');\n    }, 3000);\n  };\n\n  const getPopularRecipes = (mealType, count = 3) => {\n    return filterRecipesByPreferences(ENHANCED_RECIPES, preferences)\n      .filter(recipe => recipe.type === mealType)\n      .sort((a, b) => b.rating - a.rating)\n      .slice(0, count);\n  };\n\n  const toggleDay = (day) => {\n    setSelectedDays(prev => \n      prev.includes(day) \n        ? prev.filter(d => d !== day)\n        : [...prev, day]\n    );\n  };\n\n  const toggleMealType = (mealType) => {\n    setSelectedMealTypes(prev => \n      prev.includes(mealType) \n        ? prev.filter(m => m !== mealType)\n        : [...prev, mealType]\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n        <div className=\"quick-planner-header\">\n          <h2>\n            <Zap size={24} />\n            Quick Meal Planner\n          </h2>\n          <p>Generate your entire week in seconds with AI-powered suggestions</p>\n          \n          {showSuccessMessage && (\n            <div className=\"success-message\">\n              {showSuccessMessage}\n            </div>\n          )}\n        </div>\n\n        {!generatedPlan && !isGenerating && (\n          <>\n            <div className=\"planning-options\">\n              <div className=\"option-section\">\n                <h3>Choose Days to Plan</h3>\n                <div className=\"day-toggles\">\n                  {DAYS.map(day => (\n                    <button\n                      key={day}\n                      onClick={() => toggleDay(day)}\n                      className={`toggle-btn ${selectedDays.includes(day) ? 'active' : ''}`}\n                    >\n                      {day.slice(0, 3)}\n                    </button>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"option-section\">\n                <h3>Choose Meal Types</h3>\n                <div className=\"meal-type-toggles\">\n                  {MEAL_TYPES.map(mealType => (\n                    <button\n                      key={mealType}\n                      onClick={() => toggleMealType(mealType)}\n                      className={`toggle-btn ${selectedMealTypes.includes(mealType) ? 'active' : ''}`}\n                    >\n                      {mealType}\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"template-section\">\n              <h3>Choose Your Style</h3>\n              <div className=\"template-grid\">\n                {QUICK_TEMPLATES.map(template => (\n                  <button\n                    key={template.id}\n                    onClick={() => generateSmartPlan(template)}\n                    className=\"template-card\"\n                  >\n                    <span className=\"template-icon\">{template.icon}</span>\n                    <h4>{template.name}</h4>\n                    <p>{template.description}</p>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"quick-actions\">\n              <h3>Quick Add Popular Meals</h3>\n              <div className=\"quick-meal-sections\">\n                {MEAL_TYPES.map(mealType => (\n                  <div key={mealType} className=\"quick-meal-section\">\n                    <h4>{mealType}</h4>\n                    <div className=\"popular-recipes\">\n                      {getPopularRecipes(mealType).map(recipe => (\n                        <div key={recipe.name} className=\"popular-recipe\">\n                          <div className=\"recipe-info\">\n                            <h5>{recipe.name}</h5>\n                            <div className=\"recipe-meta\">\n                              <span className=\"rating\">⭐ {recipe.rating.toFixed(1)}</span>\n                              <span className=\"time\">\n                                <Clock size={12} />\n                                {recipe.prepTime}\n                              </span>\n                            </div>\n                          </div>\n                          <button\n                            onClick={() => addBulkMeals(mealType, [recipe])}\n                            className={`btn-add-bulk ${addedMeals.has(`${recipe.name}-${mealType}`) ? 'added' : ''}`}\n                            title={`Add to all ${selectedDays.length} selected days`}\n                            disabled={addedMeals.has(`${recipe.name}-${mealType}`)}\n                          >\n                            {addedMeals.has(`${recipe.name}-${mealType}`) ? (\n                              <>\n                                <Check size={14} />\n                                Added!\n                              </>\n                            ) : (\n                              <>\n                                <Plus size={14} />\n                                Add to Week ({selectedDays.length} days)\n                              </>\n                            )}\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </>\n        )}\n\n        {isGenerating && (\n          <div className=\"generating-state\">\n            <div className=\"loading-animation\">\n              <div className=\"loading-spinner\"></div>\n            </div>\n            <h3>Creating Your Perfect Meal Plan...</h3>\n            <p>Analyzing your preferences, dietary needs, and available ingredients</p>\n            <div className=\"generation-steps\">\n              <div className=\"step active\">✓ Filtering recipes by dietary preferences</div>\n              <div className=\"step active\">✓ Checking ingredient availability</div>\n              <div className=\"step active\">⏳ Optimizing for {selectedTemplate?.name.toLowerCase()}</div>\n              <div className=\"step\">⏳ Ensuring variety and balance</div>\n            </div>\n          </div>\n        )}\n\n        {generatedPlan && (\n          <div className=\"generated-plan\">\n            <div className=\"plan-header\">\n              <h3>\n                <Shuffle size={20} />\n                Your {selectedTemplate?.name} Plan is Ready!\n              </h3>\n              <p>Generated {Object.keys(generatedPlan).length} meals for {selectedDays.length} days</p>\n            </div>\n\n            <div className=\"plan-preview\">\n              {selectedDays.map(day => (\n                <div key={day} className=\"day-preview\">\n                  <h4>{day}</h4>\n                  <div className=\"day-meals\">\n                    {selectedMealTypes.map(mealType => {\n                      const key = `${day}-${mealType}`;\n                      const meals = generatedPlan[key] || [];\n                      return (\n                        <div key={mealType} className=\"meal-preview\">\n                          <span className=\"meal-type\">{mealType}</span>\n                          {meals.length > 0 ? (\n                            <span className=\"meal-name\">{meals[0].name}</span>\n                          ) : (\n                            <span className=\"no-meal\">-</span>\n                          )}\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"plan-stats\">\n              <div className=\"stat\">\n                <span className=\"stat-number\">\n                  {Object.values(generatedPlan).reduce((sum, meals) => \n                    sum + meals.reduce((mealSum, meal) => mealSum + meal.nutrition.calories, 0), 0\n                  )}\n                </span>\n                <span className=\"stat-label\">Total Calories</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-number\">\n                  {new Set(Object.values(generatedPlan).flat().flatMap(meal => meal.ingredients)).size}\n                </span>\n                <span className=\"stat-label\">Unique Ingredients</span>\n              </div>\n              <div className=\"stat\">\n                <span className=\"stat-number\">\n                  {Math.round(Object.values(generatedPlan).flat().reduce((sum, meal) => \n                    sum + parseInt(meal.prepTime), 0\n                  ) / Object.values(generatedPlan).flat().length)}\n                </span>\n                <span className=\"stat-label\">Avg Prep Time (min)</span>\n              </div>\n            </div>\n\n            <div className=\"plan-actions\">\n              <button onClick={applyGeneratedPlan} className=\"btn btn-primary\">\n                <Check size={16} />\n                Apply This Plan\n              </button>\n              <button \n                onClick={() => generateSmartPlan(selectedTemplate)} \n                className=\"btn btn-secondary\"\n              >\n                <Shuffle size={16} />\n                Generate Different Plan\n              </button>\n              <button \n                onClick={() => setGeneratedPlan(null)} \n                className=\"btn btn-secondary\"\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default QuickMealPlanner;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}